{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/max/Documents/React/workshop-react/React_intensive/workshop-react/src/Components/Palette.js\";\nimport React, { Component } from 'react';\nimport InstaService from '../Services/instaService';\nimport ErrorMessage from './Error';\nexport default class Palette extends Component {\n  constructor(...args) {\n    super(...args);\n    this.InstaService = new InstaService();\n    this.state = {\n      error: false,\n      photos: []\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true\n      });\n    };\n\n    this.onPhotosLoaded = photos => {\n      this.setState({\n        error: false,\n        photos\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePhotos(); //метода updatePhotos запускается только тогда, когда компонент был создан,                    \n  } //когда компонент появился на странице\n\n\n  updatePhotos() {\n    this.InstaService.getAllPhotos().then(this.onPhotosLoaded).catch(this.onError);\n  }\n\n  renderItems(arr) {\n    return arr.map(item => {\n      const {\n        src,\n        alt\n      } = item;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      error,\n      photos\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }\n\n    const items = this.renderItems(photos);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/max/Documents/React/workshop-react/React_intensive/workshop-react/src/Components/Palette.js"],"names":["React","Component","InstaService","ErrorMessage","Palette","state","error","photos","onError","setState","onPhotosLoaded","componentDidMount","updatePhotos","getAllPhotos","then","catch","renderItems","arr","map","item","src","alt","render","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CC,YAD2C,GAC5B,IAAIA,YAAJ,EAD4B;AAAA,SAE3CG,KAF2C,GAEnC;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFmC;;AAAA,SAiB3CC,OAjB2C,GAiBjC,MAAM;AACZ,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KArB0C;;AAAA,SAuB3CI,cAvB2C,GAuBzBH,MAAD,IAAY;AACzB,WAAKE,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KADG;AAEVC,QAAAA;AAFU,OAAd;AAIH,KA5B0C;AAAA;;AAO3CI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL,GADgB,CACQ;AAC3B,GAT0C,CASf;;;AAE5BA,EAAAA,YAAY,GAAG;AACX,SAAKV,YAAL,CAAkBW,YAAlB,GACKC,IADL,CACU,KAAKJ,cADf,EAEKK,KAFL,CAEW,KAAKP,OAFhB;AAGH;;AAeDQ,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,WAAOA,GAAG,CAACC,GAAJ,CAAQC,IAAI,IAAI;AACnB,YAAM;AAACC,QAAAA,GAAD;AAAMC,QAAAA;AAAN,UAAaF,IAAnB;AACA,0BACI;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAe,QAAA,GAAG,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KALM,CAAP;AAMH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAM;AAAChB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAkB,KAAKF,KAA7B;;AAEA,QAAIC,KAAJ,EAAW;AACP,0BAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAMiB,KAAK,GAAG,KAAKP,WAAL,CAAiBT,MAAjB,CAAd;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKgB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArD0C","sourcesContent":["import React, { Component } from 'react';\nimport InstaService from '../Services/instaService';\nimport ErrorMessage from './Error';\n\nexport default class Palette extends Component {\n    InstaService = new InstaService();\n    state = {\n        error: false,\n        photos: []\n    }\n\n    componentDidMount() {\n        this.updatePhotos();    //метода updatePhotos запускается только тогда, когда компонент был создан,                    \n    }                           //когда компонент появился на странице\n\n    updatePhotos() {\n        this.InstaService.getAllPhotos()\n            .then(this.onPhotosLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            error: true\n        })\n    }\n\n    onPhotosLoaded = (photos) => {\n        this.setState({\n            error: false,\n            photos\n        })\n    }\n\n    renderItems(arr) {\n        return arr.map(item => {\n            const {src, alt} = item;\n            return (\n                <img src={src} alt={alt}></img>\n            )\n        })\n    }\n\n    render () {\n        const {error, photos} = this.state;\n\n        if (error) {\n            return <ErrorMessage/>\n        }\n\n        const items = this.renderItems(photos);\n\n        return (\n            <div className=\"palette\">\n                {items}\n            </div>\n        )\n    } \n}"]},"metadata":{},"sourceType":"module"}